"use strict";

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactD3MapCore = require('react-d3-map-core');

var Map = (function (_Component) {
  _inherits(Map, _Component);

  function Map(props) {
    _classCallCheck(this, Map);

    _get(Object.getPrototypeOf(Map.prototype), 'constructor', this).call(this, props);
  }

  _createClass(Map, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
      var width = _props.width;
      var height = _props.height;
      var showGraticule = _props.showGraticule;
      var dataPolygon = _props.dataPolygon;
      var dataMesh = _props.dataMesh;
      var scale = _props.scale;
      var translate = _props.translate;
      var precision = _props.precision;
      var rotate = _props.rotate;
      var center = _props.center;
      var clipAngle = _props.clipAngle;
      var parallels = _props.parallels;
      var projection = _props.projection;

      var graticule, mesh, polygon;

      var proj = (0, _reactD3MapCore.projection)({
        projection: projection,
        scale: scale,
        translate: translate,
        precision: precision,
        rotate: rotate,
        center: center,
        clipAngle: clipAngle,
        parallels: parallels
      });
      var geoPath = (0, _reactD3MapCore.geoPath)(proj);

      if (showGraticule) {
        graticule = _react2['default'].createElement(_reactD3MapCore.Graticule, {
          geoPath: geoPath
        });
      }

      if (dataPolygon && !Array.isArray(dataPolygon)) {
        polygon = _react2['default'].createElement(_reactD3MapCore.Polygon, {
          data: dataPolygon,
          geoPath: geoPath
        });
      } else {
        polygon = dataPolygon.map(function (d, i) {
          return _react2['default'].createElement(_reactD3MapCore.Polygon, {
            key: i,
            data: d,
            geoPath: geoPath
          });
        });
      }

      if (dataMesh && !Array.isArray(dataMesh)) {
        mesh = _react2['default'].createElement(_reactD3MapCore.Mesh, {
          data: dataMesh,
          geoPath: geoPath
        });
      } else {
        mesh = dataMesh.map(function (d, i) {
          return _react2['default'].createElement(_reactD3MapCore.Mesh, {
            key: i,
            data: d,
            geoPath: geoPath
          });
        });
      }

      return _react2['default'].createElement(
        _reactD3MapCore.Svg,
        {
          width: width,
          height: height
        },
        graticule,
        polygon,
        mesh
      );
    }
  }]);

  return Map;
})(_react.Component);

exports['default'] = Map;
module.exports = exports['default'];